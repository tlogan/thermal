alloc_chan _ call \ req_ch ,
alloc_chan _ call \ resp_ch ,

spawn ( 
  loop :
  \ cnt , (
    sync (
      (equal (cnt % 7.  0.)) call 
      \ `true` , send (req_chan. _.)
      \ `false` , send (resp_chan. _.)
    ) ;
    loop (cnt + 1)
  ) ;

  \ _ , loop 0
) ;

spawn (
  loop :
  \ _ , (
    sync (chse (
      recv req_chan.
      recv resp_chan.
    ));
    loop _
  ) ;

  loop
) ;


weak_until :
\ p1. p2. , 
  recvd p2 \/ 
  recvd p1 /\ weak_until (p1. p2.)

always :
\ sym p , recvd p /\ always p

;


thm_op : prove (_ , 
  always (ch. _. , 
    ch = resp_ch --> 
		weak_until ( 
      (ch. _. , ~(ch = resp_ch)).
      (ch. _. , ch = req_ch).
    )
  )
) ;

thm_op





<INITIAL>[^_`][^`]* =>